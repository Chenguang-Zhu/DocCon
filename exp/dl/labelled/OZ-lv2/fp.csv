AccessControl	grantRole	RoleGranted	$Bool(True)
AccessControl	renounceRole	RoleRevoked	$Bool(True)
AccessControl	_setupRole	RoleGranted	$Bool(True)
ERC1155Burnable	burn	$Cmp($Literal(fromBalance), $Literal(amount), GEQ)
Create2Impl	deployERC1820Implementer	$Cmp($Literal(addr), $Literal(address(0)), NEQ)
CountersImpl	decrement	$Cmp($Literal(value), $Literal(0), GT)
BeaconProxy	constructor	$Literal(Address.isContract(IBeacon(newBeacon).implementation()))
BeaconProxy	constructor	$Literal(Address.isContract(newBeacon))
Address	functionDelegateCall	$Literal(isContract(target))
AccessControl	_checkRole	$Cmp($Literal(value), $Literal(0), EQ)
AddressImpl	functionStaticCall	$Literal(isContract(target))
BeaconProxy	constructor	$Cmp($Literal(_BEACON_SLOT), $Literal(bytes32(uint256(keccak256(bytes)(eip1967.proxy.beacon)) - 1)), EQ)
ERC1155Burnable	burnBatch	$Cmp($Literal(fromBalance), $Literal(amount), GEQ)
Create2	deploy	$Cmp($Literal(bytecode.length), $Literal(0), NEQ)
Address	functionStaticCall	$Literal(isContract(target))
AddressImpl	functionCallWithValue	$Literal(isContract(target))
Create2	deploy	$Cmp($Literal(addr), $Literal(address(0)), NEQ)
AddressImpl	functionCall	$Literal(isContract(target))
ConditionalEscrow	withdraw	$Literal(success)
BeaconProxy	constructor	BeaconUpgraded	$Bool(True)
BeaconProxy	constructor	$Literal(isContract(target))
Create2Impl	deployERC1820Implementer	$Cmp($Literal(bytecode.length), $Literal(0), NEQ)
Address	functionCallWithValue	$Literal(isContract(target))
Create2Impl	deploy	$Cmp($Literal(addr), $Literal(address(0)), NEQ)
Create2	deploy	$Cmp($Literal(address(this).balance), $Literal(amount), GEQ)
Address	functionCall	$Literal(isContract(target))
ERC1155	_burnBatch	$Cmp($Literal(fromBalance), $Literal(amount), GEQ)
CompTimelock	executeTransaction	$Literal(success)
AddressImpl	functionDelegateCall	$Literal(isContract(target))
Create2Impl	deploy	$Cmp($Literal(bytecode.length), $Literal(0), NEQ)
DummyImplementation	reverts	$Literal(false)
AccessControl	renounceRole	$Cmp($Literal(account), $Literal(_msgSender()), EQ)
EnumerableMap	get	$Logic($Cmp($Literal(value), $Literal(0), NEQ), $Literal(_contains(map,key)), OR)
EnumerableMap	_get	$Logic($Cmp($Literal(value), $Literal(0), NEQ), $Literal(_contains(map,key)), OR)
ERC1155	_safeTransferFrom	$Cmp($Literal(fromBalance), $Literal(amount), GEQ)
ERC1155PresetMinterPauser	mint	$Cmp($Literal(to), $Literal(address(0)), NEQ)
ERC1155PresetMinterPauser	mint	$Literal(hasRole(MINTER_ROLE,_msgSender()))
ERC1155PresetMinterPauser	pause	$Literal(hasRole(PAUSER_ROLE,_msgSender()))
ERC1155PresetMinterPauser	unpause	$Literal(hasRole(PAUSER_ROLE,_msgSender()))
ERC1967Upgrade	_upgradeBeaconToAndCall	$Literal(Address.isContract(newBeacon))
ERC1967Upgrade	_upgradeBeaconToAndCall	$Literal(Address.isContract(IBeacon(newBeacon).implementation()))
ERC20	decreaseAllowance	$Cmp($Literal(currentAllowance), $Literal(subtractedValue), GEQ)
ERC20	_spendAllowance	$Cmp($Literal(currentAllowance), $Literal(amount), GEQ)
ERC20	_transfer	$Cmp($Literal(fromBalance), $Literal(amount), GEQ)
ERC20Burnable	burn	Transfer	$Bool(True)
ERC20Burnable	burnFrom	$Cmp($Literal(spender), $Literal(address(0)), NEQ)
ERC20Burnable	burnFrom	Transfer	$Bool(True)
ERC20Burnable	burnFrom	Approval	$Bool(True)
ERC20Burnable	burn	$Cmp($Literal(accountBalance), $Literal(amount), GEQ)
ERC20Burnable	burnFrom	$Cmp($Literal(owner), $Literal(address(0)), NEQ)
ERC20Burnable	burn	$Cmp($Literal(account), $Literal(address(0)), NEQ)
ERC20Burnable	burnFrom	$Cmp($Literal(currentAllowance), $Literal(amount), GEQ)
ERC20Burnable	burnFrom	$Cmp($Literal(account), $Literal(address(0)), NEQ)
ERC20Burnable	burnFrom	$Cmp($Literal(accountBalance), $Literal(amount), GEQ)
ERC20FlashMint	flashLoan	$Cmp($Literal(currentAllowance), $Math($Literal(amount), $Literal(fee), ADD), GEQ)
ERC20Permit	permit	Approval	$Bool(True)
ERC20Votes	getPastTotalSupply	$Cmp($Literal(blockNumber), $Literal(block.number), LT)
ERC721PresetMinterPauserAutoId	unpause	$Literal(hasRole(PAUSER_ROLE,_msgSender()))
ERC721PresetMinterPauserAutoId	pause	$Literal(hasRole(PAUSER_ROLE,_msgSender()))
ERC721PresetMinterPauserAutoId	mint	$Literal(hasRole(MINTER_ROLE,_msgSender()))
ERC721PresetMinterPauserAutoId	mint	Transfer	$Bool(True)
ERC721Votes	_afterTokenTransfer	DelegateVotesChanged	$Bool(True)
GovernorPreventLateQuorum	_castVote	ProposalExtended	$Literal()
GovernorPreventLateQuorum	_castVote	VoteCast	$Bool(True)
GovernorPreventLateQuorum	_castVote	ProposalExtended	$Bool(True)
